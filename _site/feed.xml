<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-01-15T21:38:57+01:00</updated><id>http://localhost:4000//</id><title type="html">defsrc.com</title><subtitle>Discussing topics and going into details related to source code and software.
</subtitle><entry><title type="html">Alacritty - an OpenGL powered terminal emulator</title><link href="http://localhost:4000/software/rust/2017/01/12/alacritty-opengl-powered-terminal-emulator.html" rel="alternate" type="text/html" title="Alacritty - an OpenGL powered terminal emulator" /><published>2017-01-12T14:58:02+01:00</published><updated>2017-01-12T14:58:02+01:00</updated><id>http://localhost:4000/software/rust/2017/01/12/alacritty-opengl-powered-terminal-emulator</id><content type="html" xml:base="http://localhost:4000/software/rust/2017/01/12/alacritty-opengl-powered-terminal-emulator.html">&lt;p&gt;Today we’re going to take a look at &lt;a href=&quot;http://blog.jwilm.io/announcing-alacritty/&quot;&gt;Alacritty&lt;/a&gt;. The name, which I think is a portmanteau of alacrity and &lt;a href=&quot;http://catb.org/jargon/html/T/tty.html&quot;&gt;TTY&lt;/a&gt;, is a terminal emulator written in rust. Here’s an excerpt from the project’s README, which describes it in a nutshell:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Keep in mind that Alacritty is very much not looking to be a feature-rich terminal emulator with all sorts of bells and widgets. It’s primarily a cross-platform, blazing fast tmux renderer that Just Works.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Personally, I’ve used the following terminal emulators to a greater extent:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Sakura&lt;/li&gt;
  &lt;li&gt;Terminator&lt;/li&gt;
  &lt;li&gt;rxvt-unicode&lt;/li&gt;
  &lt;li&gt;xterm&lt;/li&gt;
  &lt;li&gt;eterm&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of which, to this date, I’ve found Sakura to be the most pleasant one to use, because of its simplicity and speed. Since Alacritty’s goals are to be simple and fast, it might be a contender for my number one.&lt;/p&gt;

&lt;h3 id=&quot;building&quot;&gt;Building&lt;/h3&gt;

&lt;p&gt;The project’s README includes instructions on which dependencies are requried and how to build. I had to &lt;code class=&quot;highlighter-rouge&quot;&gt;rustup override set $(&amp;lt;rustc-version)&lt;/code&gt; (as stated in the README) because &lt;a href=&quot;https://crates.io/crates/copypasta&quot;&gt;copypasta&lt;/a&gt; wouldn’t compile with the &lt;code class=&quot;highlighter-rouge&quot;&gt;nightly&lt;/code&gt; release. Other than that, it was, more or less, a straight-forward &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo build --release&lt;/code&gt;, and a bit of waiting.&lt;/p&gt;

&lt;h3 id=&quot;running&quot;&gt;Running&lt;/h3&gt;

&lt;p&gt;To try it out, I opened a new tmux session, split the window in two and executed &lt;code class=&quot;highlighter-rouge&quot;&gt;dd if=/dev/urandom | base64&lt;/code&gt;, in order to generate some output.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post1/alacritty_1-compressor.png&quot; alt=&quot;Alacritty test&quot; /&gt;
&lt;em&gt;Alacritty with a tmux session having two zsh instances running &lt;code class=&quot;highlighter-rouge&quot;&gt;dd if=/dev/urandom | base64&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I did the same with Sakura, and it was actually noticeably laggy, whereas Alacritty was pretty smooth. Now, this test, in and of itself, is not sufficient to draw a final conclusion regarding which is faster. I presume that factors, such as &lt;a href=&quot;http://catb.org/jargon/html/A/ANSI-standard.html&quot;&gt;ANSI&lt;/a&gt; colours and unicode glyphs, play a role as well. There is &lt;a href=&quot;https://github.com/jwilm/alacritty/issues/289&quot;&gt;an issue&lt;/a&gt; regarding this on the project’s issue tracker, where one can find some examples of ways to benchmark a terminal emulator.&lt;/p&gt;

&lt;h3 id=&quot;caveats&quot;&gt;Caveats&lt;/h3&gt;

&lt;p&gt;Running this on an older machine may not be possible just yet, due to Alacritty needing support for &lt;code class=&quot;highlighter-rouge&quot;&gt;GLSL 3.30&lt;/code&gt;, as discussed in &lt;a href=&quot;https://github.com/jwilm/alacritty/issues/128&quot;&gt;this issue&lt;/a&gt;. Trying to run Alacritty with an Intel M 530 integrated graphics controller did not work, whereas it did work on a newer ATI Radeon M. Hopefully, this issue is solved so that one can use Alacritty even on somewhat dated hardware.&lt;/p&gt;

&lt;h3 id=&quot;activity&quot;&gt;Activity&lt;/h3&gt;

&lt;p&gt;The first commit to the repository was almost one year ago and it is an &lt;a href=&quot;https://github.com/jwilm/alacritty/pulse&quot;&gt;active project&lt;/a&gt;. There seem to be a bit of duplication regarding issues, especially issues regarding performance/benchmarking.&lt;/p&gt;

&lt;h3 id=&quot;links&quot;&gt;Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.jwilm.io/announcing-alacritty/&quot;&gt;Joe Wilm’s intro to Alacritty&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jwilm/alacritty&quot;&gt;Alacritty@GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="rust" /><category term="terminal-emulator" /><category term="opengl" /><category term="cli" /><summary type="html">Today we’re going to take a look at Alacritty. The name, which I think is a portmanteau of alacrity and TTY, is a terminal emulator written in rust. Here’s an excerpt from the project’s README, which describes it in a nutshell:</summary></entry></feed>
